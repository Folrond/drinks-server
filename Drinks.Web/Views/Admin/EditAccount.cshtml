@model Drinks.Web.Models.Admin.EditAccountModel

@{
    ViewBag.Title = "Add Money";
}

<div class="row">
    <div class="col-sm-12">
        <h1>Edit Account</h1>
    </div>
</div>
<br />
<div class="row">
    <div class="col-sm-12">
        @Html.BootstrapValidationSummary()
    </div>
</div>


@if (Model != null && !string.IsNullOrWhiteSpace(Model.SuccessMessage))
{
    <div class="row">
        <div class="col-sm-12">
            <div class="alert alert-dismissable alert-success">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                @Model.SuccessMessage
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-sm-12">
        @using (Html.BeginForm("EditAccount", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="form-group">
                <label class="col-sm-2 control-label">User</label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.Id, Model.Users, new { @class = "form-control col-sm-12", data_bind = "value: userId" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Name</label>
                <div class="col-sm-4">
                    <div class="input-group col-sm-12">
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", data_bind = "value: name" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Username</label>
                <div class="col-sm-4">
                    <div class="input-group col-sm-12">
                        @Html.TextBoxFor(x => x.Username, new { @class = "form-control", data_bind = "value: username" })<span class="input-group-addon">@@satimo.fr</span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Password</label>
                <div class="col-sm-4">
                    <div class="input-group col-sm-12">
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Badge ID</label>
                <div class="col-sm-4">
                    <div class="input-group col-sm-12">
                        @Html.TextBoxFor(x => x.BadgeId, new { @class = "form-control", data_bind = "value: badgeId" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Discount</label>
                <div class="col-sm-4">
                    <div class="input-group col-sm-12">
                        @Html.TextBoxFor(x => x.DiscountPercentage, new { @class = "form-control", data_bind = "value: discountPercentage" })<span class="input-group-addon">%</span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <label>
                        @Html.CheckBoxFor(x => x.IsAdmin, new { data_bind = "checked: isAdmin" }) <span class="checkboxText">Is Admin</span>
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts
{
    <script>
        function ViewModel() {
            var self = this;
            self.userId = ko.observable(@Model.SelectedUserId);
            self.name = ko.observable();
            self.username = ko.observable();
            self.badgeId = ko.observable();
            self.isAdmin = ko.observable();
            self.discountPercentage = ko.observable();

            self.userId.subscribe(function (newValue) {
                $.getJSON("@Url.Action("GetUserData", "Admin")", { userId: newValue }, function (user) {
                    self.name(user.name);
                    self.username(user.username);
                    self.badgeId(user.badgeId);
                    self.isAdmin(user.isAdmin);
                    self.discountPercentage(user.discountPercentage);
                });
            });
        }

        var vm = new ViewModel();
        ko.applyBindings(vm);
    </script>
}
